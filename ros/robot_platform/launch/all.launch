
<launch>
  <env name="ROSCONSOLE_FORMAT" value="[${severity}][${thread}][${node}/${function}:${line}]: ${message}"/>
  <env name="ROS_LOG_DIR" value="/tmp/"/>

  <arg name="header_frame_id" default="wheel_controller" />

  <arg name="map_frame" default="map" />
  <arg name="base_frame" default="base_stabilized"/>
  <arg name="odom_frame" default="base_frame"/>
  <arg name="pub_map_odom_transform" default="true"/>
  <arg name="map_size" default="2048"/>
  <arg name="scan_subscriber_queue_size" default="5"/>
  <param name="/use_sim_time" value="false"/>

  <arg name="scan_topic" default="scan"/>
  <arg name="tf_map_scanmatch_transform_frame_name" default="odometry"/>
  <arg name="geotiff_map_file_path" default="/tmp/maps"/>

  <arg name="battery_state_output_topic" default="/robot_platform/battery" />
  <arg name="gps_state_output_topic" default="/robot_platform/gps"/>
  <arg name="imu_state_output_topic" default="/robot_platform/imu"/>
  <arg name="odom_state_output_topic" default="/robot_platform/odom"/>
  <arg name="wheel_positions_input_topic" default="/robot_platform/wheel_request"/>
  <arg name="platform_status_output_topic" default="/robot_platform/status"/>

  <node pkg="robot_platform" type="wheel_controller" name="wheel_controller" output="screen" respawn="true">

    <param name="serial_dev" type="string" value="/dev/serial/by-id/usb-Teensyduino_USB_Serial_13671670-if00" />
    <param name="serial_baudrate" type="int" value="115200" />

    <param name="header_frame_id" type="string" value="$(arg header_frame_id)" />
    
    <param name="raw_input_topic" type="string" value="/robot_platform/raw_serial_request" />
    <param name="raw_output_topic" type="string" value="/robot_platform/raw_serial_response" />
    
    <param name="battery_state_output_topic" type="string" value="$(arg battery_state_output_topic)" />
    <param name="gps_state_output_topic" type="string" value="$(arg gps_state_output_topic)" />
    <param name="imu_state_output_topic" type="string" value="$(arg imu_state_output_topic)" />
    <param name="wheel_positions_input_topic" type="string" value="$(arg wheel_positions_input_topic)" />
    <param name="platform_status_output_topic" type="string" value="$(arg platform_status_output_topic)" />
    <param name="odometry_output_topic" type="string" value="$(arg odom_state_output_topic)" />
  </node>
  
  <include file="$(find rplidar_ros)/launch/rplidar.launch">
    <arg name="frame_id" value="$(arg scan_topic)" />
  </include>

  <include file="$(find hector_geotiff_launch)/launch/geotiff_mapper.launch">
    <arg name="trajectory_source_frame_name" value="$(arg tf_map_scanmatch_transform_frame_name"/>
    <arg name="map_file_path" value="$(arg geotiff_map_file_path)"/>
  </include>
  
  <node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="screen">
    
    <!-- Frame names -->
    <param name="base_frame" value="$(arg base_frame)" />
    <param name="odom_frame" value="$(arg odom_frame)" />
    
    <!-- Tf use -->
    <param name="use_tf_scan_transformation" value="true"/>
    <param name="use_tf_pose_start_estimate" value="false"/>
    <param name="pub_map_odom_transform" value="$(arg pub_map_odom_transform)"/>
    
    <!-- Map size / start point -->
    <param name="map_frame" value="$(arg map_frame)"/>
    <param name="map_resolution" value="0.050"/>
    <param name="map_size" value="$(arg map_size)"/>
    <param name="map_start_x" value="0.5"/>
    <param name="map_start_y" value="0.5" />
    <param name="map_multi_res_levels" value="2" />
    
    <!-- Map update parameters -->
    <param name="update_factor_free" value="0.4"/>
    <param name="update_factor_occupied" value="0.9" />    
    <param name="map_update_distance_thresh" value="0.4"/>
    <param name="map_update_angle_thresh" value="0.06" />
    <param name="laser_z_min_value" value = "-1.0" />
    <param name="laser_z_max_value" value = "1.0" />
    
    <!-- Advertising config --> 
    <param name="advertise_map_service" value="true"/>
    
    <param name="scan_subscriber_queue_size" value="$(arg scan_subscriber_queue_size)"/>
    <param name="scan_topic" value="$(arg scan_topic)"/>
    
    <!-- Debug parameters -->
    <!--
      <param name="output_timing" value="false"/>
      <param name="pub_drawings" value="true"/>
      <param name="pub_debug_output" value="true"/>
    -->
    <param name="tf_map_scanmatch_transform_frame_name" value="$(arg tf_map_scanmatch_transform_frame_name)" />
  </node>
  
  <include file="$(find robot_platform)/launch/joy_controller.launch">
    <arg name="move_request_output_topic" value="$(arg wheel_positions_input_topic)" />
    <arg name="platform_status_input_topic" value="$(arg platform_status_output_topic)" />
  </include>

</launch>
