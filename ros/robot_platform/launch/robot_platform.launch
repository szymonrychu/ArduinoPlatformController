<launch>
  <env name="ROSCONSOLE_FORMAT" value="[${severity}][${thread}][${node}/${function}:${line}]: ${message}"/>
  <env name="ROS_LOG_DIR" value="/tmp/"/>

  <arg name="pub_map_scanmatch_transform" default="false"/>
  <arg name="map_size" default="2048"/>
  <arg name="scan_subscriber_queue_size" default="5"/>
  <arg name="tf_map_scanmatch_transform_frame_name" default="scanmatcher_frame"/>
  <arg name="trajectory_update_rate" default="5"/>
  <arg name="trajectory_publish_rate" default="0.2"/>
  <arg name="geotiff_map_file_path" default="$(find robot_platform)/maps"/>
  <arg name="map_file_base_name" default="hector_slam_map"/>

  <arg name="laser_frame_id" default="laser_link"/>
  <arg name="odom_frame_id" default="odom"/>
  <arg name="map_frame_id" default="odom"/>
  <arg name="base_frame_id" default="base_link" />
  <arg name="base_footprint_frame_id" default="base_footprint" />

  <arg name="scan_topic" default="laser"/>
  <arg name="battery_state_output_topic" default="/robot_platform/battery" />
  <arg name="gps_state_output_topic" default="/robot_platform/gps"/>
  <arg name="imu_state_output_topic" default="/robot_platform/imu"/>
  <arg name="odom_state_output_topic" default="/robot_platform/odom"/>
  <arg name="pose_output_topic" default="/robot_platform/pose"/>
  <arg name="wheel_positions_input_topic" default="/robot_platform/wheel_request"/>
  <arg name="shutdown_command_input_topic" default="/robot_platform/shutdown"/>
  <arg name="platform_status_output_topic" default="/robot_platform/status"/>

  <arg name="controller_frequency" default="1.0"/>

  <!-- <node pkg="tf" type="static_transform_publisher" name="odom_to_map" args="0 0 0 0 0 0 /map /odom 100"/> -->

  <!-- <include file="$(find robot_platform)/launch/joy_controller.launch">
    <arg name="move_request_output_topic" value="$(arg wheel_positions_input_topic)" />
    <arg name="shutdown_command_output_topic" value="$(arg shutdown_command_input_topic)" />
    <arg name="platform_status_input_topic" value="$(arg platform_status_output_topic)" />
  </include> -->

  <include file="$(find robot_platform)/launch/platform_controller.launch">
    <arg name="odom_frame_id" value="$(arg odom_frame_id)" />
    <arg name="base_frame_id" value="$(arg base_frame_id)" />
    <arg name="laser_frame_id" value="$(arg laser_frame_id)" />
    <arg name="base_footprint_frame_id" value="$(arg base_footprint_frame_id)" />
		<arg name="controller_frequency" value="$(arg controller_frequency)" />
    
    <arg name="battery_state_output_topic" value="$(arg battery_state_output_topic)" />
    <arg name="gps_state_output_topic" value="$(arg gps_state_output_topic)" />
    <arg name="imu_state_output_topic" value="$(arg imu_state_output_topic)" />
    <!-- <arg name="shutdown_command_input_topic" value="$(arg shutdown_command_input_topic)" /> -->
    <arg name="platform_status_output_topic" value="$(arg platform_status_output_topic)" />
    <arg name="odom_state_output_topic" value="$(arg odom_state_output_topic)" />
    <arg name="pose_output_topic" value="$(arg pose_output_topic)" />
  </include>
  
  <include file="$(find rplidar_ros)/launch/rplidar.launch">
    <arg name="frame_id" value="$(arg laser_frame_id)" />
  </include>
  
  <include file="$(find freenect_launch)/launch/examples/freenect-registered-xyzrgb.launch" />

  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization">
    <rosparam command="load" file="$(find robot_platform)/config/ekf_localization.yaml"/>
  </node>

  <include file="$(find hector_mapping)/launch/mapping_default.launch">
    <arg name="base_frame" value="$(arg base_frame_id)" />
    <arg name="odom_frame" value="$(arg odom_frame_id)" />
    <arg name="pub_map_odom_transform" value="true"/>
    <arg name="scan_subscriber_queue_size" value="5"/>
  </include>

  <node pkg="hector_trajectory_server" type="hector_trajectory_server" name="hector_trajectory_server" output="screen">
    <param name="target_frame_name" type="string" value="$(arg map_frame_id)" />
    <param name="source_frame_name" type="string" value="$(arg tf_map_scanmatch_transform_frame_name)" />
    <param name="trajectory_update_rate" type="double" value="$(arg trajectory_update_rate)" />
    <param name="trajectory_publish_rate" type="double" value="$(arg trajectory_publish_rate)" />
  </node>

  <node pkg="hector_geotiff" type="geotiff_node" name="hector_geotiff_node" output="screen" launch-prefix="nice -n 15">
    <remap from="map" to="/dynamic_map" />
    <param name="map_file_path" type="string" value="$(arg geotiff_map_file_path)" />
    <param name="map_file_base_name" type="string" value="$(arg map_file_base_name)" />
    <param name="geotiff_save_period" type="double" value="0" />
    <param name="draw_background_checkerboard" type="bool" value="true" />
    <param name="draw_free_space_grid" type="bool" value="true" />
    <param name="plugins" type="string" value="hector_geotiff_plugins/TrajectoryMapWriter" />
  </node>

  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find robot_platform)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find robot_platform)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find robot_platform)/config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find robot_platform)/config/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find robot_platform)/config/teb_local_planner_params.yaml" command="load" />
		<!-- Here we load our costmap conversion settings -->
		<rosparam file="$(find robot_platform)/config/costmap_converter_params.yaml" command="load" /> 

		<param name="base_global_planner" value="global_planner/GlobalPlanner" />

		<param name="recovery_behaviors" value="[{name:move_slow_and_clear,type:move_slow_and_clear/MoveSlowAndClear}]" />
    
		<param name="base_local_planner" value="teb_local_planner/TebLocalPlannerROS" />

		<param name="planner_frequency" value="$(arg controller_frequency)" />
		<param name="controller_frequency" value="$(arg controller_frequency)" />

		<param name="planner_patience" value="10.0" />
		<param name="controller_patience" value="10.0" />
		<param name="max_planning_retries" value="-1" />
	</node>

</launch>
